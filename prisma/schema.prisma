datasource db {
  provider = "postgresql" // Or another provider like "mysql" or "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Quiz {
  id          String     @id @default(cuid()) // Unique identifier for each quiz
  title       String // Title of the quiz
  description String? // Optional description of the quiz
  questions   Question[] @relation("QuizQuestions") // Relation to questions in the quiz
}

model Question {
  id      String   @id @default(cuid()) // Unique identifier for each question
  quizId  String
  text    String // Text content of the question
  quiz    Quiz     @relation("QuizQuestions", fields: [quizId], references: [id]) // Relation to the associated quiz
  answers Answer[] @relation("QuestionAnswers") // Relation to possible answers for this question
}

model Answer {
  id         String   @id @default(cuid()) // Unique identifier for each answer
  text       String // Text content of the answer
  isCorrect  Boolean  @default(false) // Boolean indicating if this is the correct answer
  question   Question @relation("QuestionAnswers", fields: [questionId], references: [id]) // Relation to the associated question
  questionId String // Foreign key for Question
}

model User {
  id         String  @id @default(cuid()) // Unique identifier for each user
  externalId String  @unique
  firstName  String? // Optional name for the user
  lastName   String?
  email      String  @unique // Unique email address for each user

  role Role @default(USER) // Boolean indicating if the user is an admin

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // password String   // Password for the user

  // quizzes  Quiz[]   @relation("UserQuizzes") // Relation to quizzes created by the user
}

enum Role {
  USER
  ADMIN
}
